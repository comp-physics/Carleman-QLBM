name: Performance Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  schedule:
    # Run weekly on Sundays at 2 AM UTC
    - cron: '0 2 * * 0'

jobs:
  performance:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Julia
      uses: julia-actions/setup-julia@v1
      with:
        version: '1.10'
        
    - name: Cache Julia packages
      uses: actions/cache@v4
      with:
        path: ~/.julia
        key: ubuntu-julia-1.10-${{ hashFiles('**/Project.toml') }}
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-matplotlib
        
    - name: Set environment variables
      run: |
        echo "QCFD_HOME=${{ github.workspace }}" >> $GITHUB_ENV
        echo "QCFD_SRC=${{ github.workspace }}/src/" >> $GITHUB_ENV
        
    - name: Install Julia dependencies
      run: |
        julia -e 'using Pkg; Pkg.add(["SymPy", "PyPlot", "HDF5", "LaTeXStrings", "SparseArrays", "LinearAlgebra", "Test"])'
        
    - name: Create performance test script
      run: |
        cat > src/CLBM/performance_test.jl << 'EOF'
        # Performance test for different problem sizes
        include("clbm_config.jl")
        
        # Override configuration for different test cases
        test_cases = [
            (Q=3, truncation_order=2, n_time=10),
            (Q=3, truncation_order=3, n_time=20),
            (Q=3, truncation_order=4, n_time=10),
        ]
        
        println("Performance Test Results:")
        println("=" ^ 50)
        
        for (i, case) in enumerate(test_cases)
            println("Test Case $i: Q=$(case.Q), truncation_order=$(case.truncation_order), n_time=$(case.n_time)")
            
            # Update global variables
            global Q = case.Q
            global truncation_order = case.truncation_order
            global n_time = case.n_time
            
            try
                # Run the test
                include("test_sparse_vs_dense.jl")
                println("✅ PASSED")
            catch e
                println("❌ FAILED: $e")
                exit(1)
            end
            println()
        end
        
        println("🎉 All performance tests passed!")
        EOF
        
    - name: Run performance tests
      run: |
        cd src/CLBM
        julia performance_test.jl
